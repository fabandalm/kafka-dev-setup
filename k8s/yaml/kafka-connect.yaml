apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
spec:
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
      - name: kafka-connect
        image: confluentinc/cp-kafka-connect-base:6.0.0
        ports:
        - containerPort: 8083
        env:
          - name: CONNECT_BOOTSTRAP_SERVERS 
            value: "broker:29092"
          - name: CONNECT_REST_PORT 
            value: "8083"
          - name: CONNECT_GROUP_ID 
            value: "kafka-connect"
          - name: CONNECT_CONFIG_STORAGE_TOPIC 
            value: "_connect-configs"
          - name: CONNECT_OFFSET_STORAGE_TOPIC 
            value: "_connect-offsets"
          - name: CONNECT_STATUS_STORAGE_TOPIC 
            value: "_connect-status"
          - name: CONNECT_KEY_CONVERTER 
            value: "org.apache.kafka.connect.storage.StringConverter"
          - name: CONNECT_VALUE_CONVERTER
            value: "io.confluent.connect.avro.AvroConverter"
          - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL 
            value: "http://schema-registry:8081"
          - name: CONNECT_INTERNAL_KEY_CONVERTER 
            value: "org.apache.kafka.connect.json.JsonConverter"
          - name: CONNECT_INTERNAL_VALUE_CONVERTER 
            value: "org.apache.kafka.connect.json.JsonConverter"
          - name: CONNECT_REST_ADVERTISED_HOST_NAME 
            value: "kafka-connect"
          - name: CONNECT_LOG4J_ROOT_LOGLEVEL 
            value: "INFO"
          - name: CONNECT_LOG4J_LOGGERS 
            value: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
          - name: CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN 
            value: "[%d] %p %X{connector.context}%m (%c:%L)%n"
          - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR 
            value: "1"
          - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR 
            value: "1"
          - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR 
            value: "1"
          - name: CONNECT_PLUGIN_PATH
            value: "/usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars,/usr/local/share/kafka/plugins"
        volumeMounts:
          - name: hostvolume
            mountPath: /usr/local/share/kafka/plugins
      volumes:
      - name: hostvolume
        hostPath:
          path: /Users/falmeida/env_dev/k8s-kafka-local-setup/plugins/
          type: DirectoryOrCreate
    # If you want to use the Confluent Hub installer to d/l component, but make them available
    # when running this offline, spin up the stack once and then run : 
    #   docker cp kafka-connect:/usr/share/confluent-hub-components ./data/connect-jars
    # volumes:
    #   - $PWD/data:/data
    # In the command s
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect
spec:
  type: NodePort
  selector:
    app: kafka-connect
  ports:
  - port: 8083
    targetPort: 8083
    nodePort: 30083

